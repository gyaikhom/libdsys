# configure.in
# Process this file with autoconf to produce a configure script.
#
# Copyright (C) 2004, Gagarine Yaikhom
# Copyright (C) 2004, University of Edinburgh 
#
# $Id: configure.in,v 1.5 2004/11/17 20:13:42 project Exp $
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

#AC_PREREQ(2.59)
AC_INIT([libdsys/collect.c])

# Get libdsys version from VERSION
m4_include([m4/libdsys_get_version.m4])
LIBDSYS_GET_VERSION(${srcdir}/m4, ${srcdir}/VERSION)

echo \
"
---------------------------------------------------------------
Beta-channels Ver. ${LIBDSYS_VERSION} Configuration
---------------------------------------------------------------"

AC_CONFIG_SRCDIR([libdsys/collect.c])
AM_CONFIG_HEADER([libdsys/config.h]:[libdsys/config-h.in])
AC_CONFIG_AUX_DIR(./config)

# Initialise automake
AM_INIT_AUTOMAKE(libdsys, ${LIBDSYS_VERSION})

# Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB

# Checks for libraries.
AC_CHECK_LIB(m, ceil)
AC_CHECK_LIB(pthread, pthread_create)

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([netdb.h netinet/in.h stdlib.h string.h strings.h sys/file.h sys/socket.h sys/time.h unistd.h pthread.h mpi.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_C_VOLATILE

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_SELECT_ARGTYPES
AC_CHECK_FUNCS([gethostbyname gettimeofday memset select socket])

# Enable interface error messaging: --enable-errmsg [default=yes]
AC_MSG_CHECKING(whether to enable interface error messaging)
errmsg_default="yes"
AC_ARG_ENABLE(errmsg, [  --enable-errmsg=[no/yes]   turn on error messaging (default=yes)],
	, enable_errmsg=$errmsg_default)
if test "x$enable_errmsg" = "xyes"; then
CFLAGS="$CFLAGS -DBC_SHOW_ERROR"
AC_MSG_RESULT(yes)
else
AC_MSG_RESULT(no)
fi

# Set internal protection.
CFLAGS="$CFLAGS -Wall -D__BC_SYS_COMPILE"

AC_SUBST(ac_aux_dir)

# Generate Makefiles
AC_OUTPUT([
Makefile
libdsys/Makefile
examples/Makefile
examples/usage/Makefile
examples/common/Makefile
examples/skeletons/Makefile
])

echo \
"
---------------------------------------------------------------
Beta-channels Ver. ${LIBDSYS_VERSION} Configuration
---------------------------------------------------------------
    Source code location: ${srcdir}
                Compiler: ${CC}
          Compiler flags: 
---------------------------------------------------------------
${CFLAGS}
---------------------------------------------------------------
        Host System Type: ${host}
            Install path: ${prefix}

Please run the following commands to build and install:
$ make
$ make install
---------------------------------------------------------------"

# End of file
